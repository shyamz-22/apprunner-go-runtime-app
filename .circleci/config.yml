version: 2.1

orbs:
  go: circleci/go@1.7.3
  aws-cli: circleci/aws-cli@4.0.0
  queue: eddiewebb/queue@2.2.1


jobs:
  test:
    docker:
      - image: cimg/go:1.19.2
        environment:
          TABLE_NAME: urls-new
    steps:
      # Checkout the code as the first step.
      - checkout
      - go/load-cache # Load cached Go modules.
      - go/mod-download # Run 'go mod download'.
      - go/save-cache # Save Go modules to cache.
      - go/test: # Runs 'go test ./...' but includes extensive parameterization for finer tuning.
          covermode: atomic
          failfast: true
          race: true
  deploy:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: ${AWS_ROLE_ARN}
          profile_name: "app-runner-profile"
          session_duration: "1800"
      - run:
          name: Deploy go app to AWS App Runner service
          command: |
            ./deploy.sh $AWS_APPRUNNER_SERVICE_ARN app-runner-profile

workflows:
  sample:
    jobs:
      - queue/block_workflow:
            only-on-branch: master
            time: '10'
      - test:
          requires:
            - queue/block_workflow
      - deploy:
          requires:
            - test
          context:
            - aws